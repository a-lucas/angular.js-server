{"version":3,"sources":["webpack:///webpack/bootstrap 88c2f19c68d7fb322e26","webpack:///./src/AngularServerRenderer.ts","webpack:///external \"jsdom\"","webpack:///./src/EngineConfig.ts","webpack:///external \"simple-url-cache\"","webpack:///external \"shelljs\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"debug\"","webpack:///external \"es6-promise\"","webpack:///./src/ResponseFormater.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E,4DAA4D,EAAE;AAC3I,wFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,wCAAuC,uCAAuC;AAC9E;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;;;;;;AChLA,mzF;AACA;AACA;AACA;AACA,4DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA,2DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,8BAA8B;AAC7F;AACA;AACA;AACA;AACA,gEAA+D,cAAc;AAC7E;AACA;AACA;AACA;AACA,+DAA8D,cAAc;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC/YA,8C;;;;;;ACAA,qC;;;;;;ACAA,kC;;;;;;ACAA,gC;;;;;;ACAA,mC;;;;;;ACAA,yC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD","file":"AngularServerRenderer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 88c2f19c68d7fb322e26\n **/","\"use strict\";\nvar jsdom = require('jsdom');\nvar EngineConfig_1 = require('./EngineConfig');\nvar dbug = require('debug');\nvar fs = require('fs');\nvar es6_promise_1 = require('es6-promise');\nvar ResponseFormater_1 = require('./ResponseFormater');\nvar debug = dbug('angular.js-server');\nvar AngularServerRenderer = (function () {\n    function AngularServerRenderer(config) {\n        var _this = this;\n        this.serverDebug = false;\n        this.getConfig = function () {\n            return _this.engineConfig;\n        };\n        this.log = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            fs.appendFileSync(_this.engineConfig.getLogServerPath(), args.join(', ') + '\\n');\n        };\n        this.getHTML = function (window, timeouts) {\n            debug('Getting HTML.');\n            var AngularDocument = window.angular.element(window.document);\n            var scope = AngularDocument.scope();\n            scope.$apply();\n            for (var i in timeouts) {\n                clearTimeout(timeouts[i]);\n            }\n            var html = window.document.documentElement.outerHTML;\n            if (typeof window.$cacheFactoryProvider !== 'undefined') {\n                debug('$cacheFactoryProvider', window.$cacheFactoryProvider);\n                var cachedData = window.$cacheFactoryProvider.exportAll();\n                var script = \"<script type='text/javascript'> \" +\n                    \"/*No read only needed */\" +\n                    \"/*Object.defineProperty (window,'$angularServerCache', {value :  \" + JSON.stringify(cachedData) + \",writable: false});*/\"\n                    + \"window.$angularServerCache = \" + JSON.stringify(cachedData) + \";</script></head>\";\n                debug('inserting the script: ', script);\n                html = html.replace(/<\\/head>/i, script);\n            }\n            debug('returned HTML length: ', html.length);\n            return html;\n        };\n        this.middleware = function () {\n            var self = _this;\n            return function (req, res, next) {\n                debug('MiddleWare called with URL ', req.url);\n                if (req.method !== 'GET') {\n                    next();\n                }\n                if (req.xhr === true) {\n                    next();\n                }\n                if (/text\\/html/.test(req.get('accept')) !== true) {\n                    next();\n                }\n                var send = res.send.bind(res);\n                res.send = function (body) {\n                    if (typeof body === 'string') {\n                        self.render(body, req.url).then(function (result) {\n                            debug('MiddleWare successfully rendered');\n                            res.location(req.url);\n                            res.status(200);\n                            return send.apply(this, [result.html]);\n                        }, function (result) {\n                            debug('MidleWare error rendering');\n                            res.status(500);\n                            res.location(req.url);\n                            return send.apply(this, [result.html]);\n                        });\n                    }\n                    else {\n                        return send.apply(this, [body]);\n                    }\n                };\n                next();\n            };\n        };\n        this.instanciateJSDOM = function (html, url) {\n            jsdom.debugMode = true;\n            var URL = _this.engineConfig.getDomain() + ':' + _this.engineConfig.getPort() + url;\n            debug('SERVER URL = ', URL);\n            var document = jsdom.jsdom(html, {\n                features: {\n                    FetchExternalResources: ['script'],\n                    ProcessExternalResources: ['script']\n                },\n                url: URL,\n                virtualConsole: jsdom.createVirtualConsole().sendTo(console),\n                document: {\n                    referrer: '',\n                    cookie: 'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/',\n                    cookieDomain: _this.engineConfig.getDomain()\n                }\n            });\n            return Object.assign(document.defaultView, {\n                onServer: true,\n                fs: fs,\n                logConfig: _this.engineConfig.getLogConfig(),\n                serverDebug: _this.engineConfig.getDebug()\n            });\n        };\n        this.render = function (html, url) {\n            return new es6_promise_1.Promise(function (resolve, reject) {\n                var shouldRender;\n                try {\n                    shouldRender = _this.engineConfig.shouldRender(url);\n                }\n                catch (e) {\n                    _this.log(e);\n                    reject(ResponseFormater_1.Response.send(html, ResponseFormater_1.ResponseStatus.SERVER_ERROR, e));\n                }\n                if (!shouldRender) {\n                    debug('This Angular URL should not be pre-rendered', url);\n                    resolve(ResponseFormater_1.Response.send(html, ResponseFormater_1.ResponseStatus.RENDER_EXCLUDED));\n                }\n                else {\n                    var cacheUrl_1 = _this.cache.url(url);\n                    cacheUrl_1.isCached().then(function (isCached) {\n                        if (isCached === true) {\n                            debug('This URL is cached', url);\n                            cacheUrl_1.getUrl().then(function (res) {\n                                resolve(ResponseFormater_1.Response.send(res, ResponseFormater_1.ResponseStatus.ALREADY_CACHED));\n                            });\n                        }\n                        else {\n                            var rendering_1 = false;\n                            var window_1 = _this.instanciateJSDOM(html, url);\n                            debug('jsdom.jsdom loaded');\n                            var serverTimeout_1 = setTimeout(function () {\n                                if (rendering_1)\n                                    return;\n                                debug('SERVER TIMEOUT ! ! !');\n                                rendering_1 = true;\n                                cacheUrl_1.removeUrl().then(function () {\n                                    resolve(ResponseFormater_1.Response.send(html, ResponseFormater_1.ResponseStatus.SERVER_TIMEOUT));\n                                    window_1.close();\n                                });\n                            }, _this.engineConfig.getTimeout());\n                            window_1.addEventListener('ServerExceptionHandler', function (err, data) {\n                                rendering_1 = true;\n                                cacheUrl_1.removeUrl().then(function () {\n                                    debug('EVENT LISTENER ON ServerExceptionHandler CATCHED', err.details);\n                                    reject(ResponseFormater_1.Response.send(html, ResponseFormater_1.ResponseStatus.ERROR_HANDLER, err));\n                                    window_1.close();\n                                    window_1.dispose();\n                                });\n                            });\n                            window_1.addEventListener('Idle', function () {\n                                debug('Idle event caught');\n                                if (rendering_1)\n                                    return;\n                                rendering_1 = true;\n                                var renderedHtml = _this.getHTML(window_1, [serverTimeout_1]);\n                                cacheUrl_1.cache(renderedHtml).then(function () {\n                                    resolve(ResponseFormater_1.Response.send(renderedHtml, ResponseFormater_1.ResponseStatus.RENDERED));\n                                    window_1.close();\n                                    window_1.dispose();\n                                });\n                            });\n                            window_1.addEventListener('load', function () {\n                                debug('Application is loaded in JSDOM');\n                            });\n                        }\n                    });\n                }\n            });\n        };\n        this.engineConfig = new EngineConfig_1.default(config);\n        debug('AngularServerRenderer initialized with config = ', config);\n    }\n    AngularServerRenderer.serverLogFile = 'angular.js-server.log';\n    return AngularServerRenderer;\n}());\n;\nmodule.exports = AngularServerRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/AngularServerRenderer.ts\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = require(\"jsdom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsdom\"\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar simple_url_cache_1 = require('simple-url-cache');\nvar shell = require('shelljs');\nvar path = require('path');\nvar fs = require('fs');\nvar dbug = require('debug');\nvar debug = dbug('angular.js-server');\nvar EngineConfig = (function () {\n    function EngineConfig(config) {\n        var _this = this;\n        this.configInstanciated = false;\n        this.setDomain = function (domain) {\n            _this.serverConfig.domain = domain;\n            return _this;\n        };\n        this.setPort = function (port) {\n            _this.serverConfig.port = port;\n            return _this;\n        };\n        this.setTimeout = function (timeout) {\n            _this.serverConfig.timeout = timeout;\n            return _this;\n        };\n        this.setDebug = function (debug) {\n            _this.serverConfig.debug = debug;\n            return _this;\n        };\n        this.getDomain = function () {\n            return _this.serverConfig.domain;\n        };\n        this.getPort = function () {\n            return _this.serverConfig.port;\n        };\n        this.getTimeout = function () {\n            return _this.serverConfig.timeout;\n        };\n        this.getDebug = function () {\n            return _this.serverConfig.debug;\n        };\n        this.setRenderStrategy = function (strategy) {\n            _this.renderConfig.strategy = strategy;\n            return _this;\n        };\n        this.addRenderRule = function (rule) {\n            _this.renderConfig.rules.push(rule);\n            return _this;\n        };\n        this.removeRenderRule = function (rule) {\n            var index = null;\n            for (var i in _this.renderConfig.rules) {\n                if (_this.regexSame(_this.renderConfig.rules[i], rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.renderConfig.rules.splice(index, 1);\n            }\n            return _this;\n        };\n        this.getRenderStrategy = function () {\n            return _this.renderConfig.strategy;\n        };\n        this.getRules = function () {\n            return _this.renderConfig.rules;\n        };\n        this.hasRule = function (rule) {\n            for (var i in _this.renderConfig.rules) {\n                if (_this.regexSame(_this.renderConfig.rules[i], rule)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.setLogBasePath = function (path) {\n            _this.logConfig.dir = path;\n            _this.initializeLogFileStructure();\n            return _this;\n        };\n        this.setLogDefinition = function (log, enabled, stacktrace) {\n            _this.logConfig[log].enabled = enabled;\n            _this.logConfig[log].statcktrace = stacktrace ? stacktrace : false;\n            _this.initializeLogFileStructure();\n            return _this;\n        };\n        this.setLogFileServerName = function (name) {\n            _this.logConfig.serverLogFile = name;\n            _this.initializeLogFileStructure();\n            return _this;\n        };\n        this.getLogBasePath = function () {\n            return _this.logConfig.dir;\n        };\n        this.getLogDefinition = function (log) {\n            return _this.logConfig[log];\n        };\n        this.getLogFileServerName = function () {\n            return _this.logConfig.serverLogFile;\n        };\n        this.getLogPath = function (log) {\n            return path.join(_this.logConfig.dir, log + '.log');\n        };\n        this.getLogServerPath = function () {\n            return path.join(_this.logConfig.dir, _this.logConfig.serverLogFile + '.log');\n        };\n        this.getLogConfig = function () {\n            return _this.logConfig;\n        };\n        this.setCacheStorageConfig = function (config) {\n            _this.cacheConfig.storageConfig = config;\n            _this.initializeCache();\n            return _this;\n        };\n        this.setCacheDefault = function (def) {\n            _this.cacheConfig.cacheRules.default = def;\n            _this.initializeCache();\n            return _this;\n        };\n        this.addCacheMaxAgeRule = function (rule, maxAge) {\n            _this.cacheConfig.cacheRules.cacheMaxAge.push({ regex: rule, maxAge: maxAge });\n            _this.initializeCache();\n            return _this;\n        };\n        this.addCacheAlwaysRule = function (rule) {\n            _this.cacheConfig.cacheRules.cacheAlways.push({ regex: rule });\n            _this.initializeCache();\n            return _this;\n        };\n        this.addCacheNeverRule = function (rule) {\n            _this.cacheConfig.cacheRules.cacheNever.push({ regex: rule });\n            _this.initializeCache();\n            return _this;\n        };\n        this.removeCacheMaxAgeRule = function (rule) {\n            var index = null;\n            for (var i in _this.cacheConfig.cacheRules.cacheMaxAge) {\n                if (_this.regexSame(_this.cacheConfig.cacheRules.cacheMaxAge[i].regex, rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.cacheConfig.cacheRules.cacheMaxAge.splice(index, 1);\n                _this.initializeCache();\n            }\n            return _this;\n        };\n        this.removeCacheAlwaysRule = function (rule) {\n            var index = null;\n            for (var i in _this.cacheConfig.cacheRules.cacheAlways) {\n                if (_this.regexSame(_this.cacheConfig.cacheRules.cacheAlways[i].regex, rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.cacheConfig.cacheRules.cacheAlways.splice(index, 1);\n                _this.initializeCache();\n            }\n            return _this;\n        };\n        this.removeCacheNeverRule = function (rule) {\n            var index = null;\n            for (var i in _this.cacheConfig.cacheRules.cacheNever) {\n                if (_this.regexSame(_this.cacheConfig.cacheRules.cacheNever[i].regex, rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.cacheConfig.cacheRules.cacheNever.splice(index, 1);\n                _this.initializeCache();\n            }\n            return _this;\n        };\n        this.getCacheDefault = function () {\n            return _this.cacheConfig.cacheRules.default;\n        };\n        this.getCacheMaxAgeRules = function () {\n            return _this.cacheConfig.cacheRules.cacheMaxAge;\n        };\n        this.getCacheAlwaysRules = function () {\n            return _this.cacheConfig.cacheRules.cacheAlways;\n        };\n        this.getCacheNeverRules = function () {\n            return _this.cacheConfig.cacheRules.cacheNever;\n        };\n        this.setRestCacheStorageConfig = function (config) {\n            _this.cacheRestConfig.storageConfig = config;\n            _this.initializeRestCache();\n            return _this;\n        };\n        this.setRestCacheDefault = function (def) {\n            _this.cacheRestConfig.cacheRules.default = def;\n            _this.initializeRestCache();\n            return _this;\n        };\n        this.addRestCacheMaxAgeRule = function (rule, maxAge) {\n            _this.cacheRestConfig.cacheRules.cacheMaxAge.push({ regex: rule, maxAge: maxAge });\n            _this.initializeRestCache();\n            return _this;\n        };\n        this.addRestCacheAlwaysRule = function (rule) {\n            _this.cacheRestConfig.cacheRules.cacheAlways.push({ regex: rule });\n            _this.initializeRestCache();\n            return _this;\n        };\n        this.addRestCacheNeverRule = function (rule) {\n            _this.cacheRestConfig.cacheRules.cacheNever.push({ regex: rule });\n            _this.initializeRestCache();\n            return _this;\n        };\n        this.removeRestCacheMaxAgeRule = function (rule) {\n            var index = null;\n            for (var i in _this.cacheRestConfig.cacheRules.cacheMaxAge) {\n                if (_this.regexSame(_this.cacheRestConfig.cacheRules.cacheMaxAge[i].regex, rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.cacheRestConfig.cacheRules.cacheMaxAge.splice(index, 1);\n                _this.initializeRestCache();\n            }\n            return _this;\n        };\n        this.removeRestCacheAlwaysRule = function (rule) {\n            var index = null;\n            for (var i in _this.cacheRestConfig.cacheRules.cacheAlways) {\n                if (_this.regexSame(_this.cacheRestConfig.cacheRules.cacheAlways[i].regex, rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.cacheRestConfig.cacheRules.cacheAlways.splice(index, 1);\n                _this.initializeRestCache();\n            }\n            return _this;\n        };\n        this.removeRestCacheNeverRule = function (rule) {\n            var index = null;\n            for (var i in _this.cacheRestConfig.cacheRules.cacheNever) {\n                if (_this.regexSame(_this.cacheRestConfig.cacheRules.cacheNever[i].regex, rule)) {\n                    index = i;\n                }\n            }\n            if (index !== null) {\n                _this.cacheRestConfig.cacheRules.cacheNever.splice(index, 1);\n                _this.initializeRestCache();\n            }\n            return _this;\n        };\n        this.getRestCacheDefault = function () {\n            return _this.cacheRestConfig.cacheRules.default;\n        };\n        this.getRestCacheMaxAgeRules = function () {\n            return _this.cacheRestConfig.cacheRules.cacheMaxAge;\n        };\n        this.getRestCacheAlwaysRules = function () {\n            return _this.cacheRestConfig.cacheRules.cacheAlways;\n        };\n        this.getRestCacheNeverRules = function () {\n            return _this.cacheRestConfig.cacheRules.cacheNever;\n        };\n        this.initializeCache = function () {\n            if (!_this.configInstanciated) {\n                return;\n            }\n            _this.cache = new simple_url_cache_1.CacheEngine(_this.cacheConfig.storageConfig, _this.cacheConfig.cacheRules);\n        };\n        this.initializeRestCache = function () {\n            if (!_this.configInstanciated) {\n                return;\n            }\n            _this.restCache = new simple_url_cache_1.CacheEngine(_this.cacheRestConfig.storageConfig, _this.cacheRestConfig.cacheRules);\n        };\n        this.importConfig = function (config) {\n            _this.setDomain(config.server.domain);\n            _this.setPort(config.server.port);\n            _this.setTimeout(config.server.timeout);\n            _this.setDebug(config.server.debug);\n            _this.setRenderStrategy(config.render.strategy);\n            config.render.rules.forEach(function (rule) {\n                _this.addRenderRule(rule);\n            });\n            _this.setCacheStorageConfig(config.cache.storageConfig);\n            _this.setCacheDefault(config.cache.cacheRules.default);\n            config.cache.cacheRules.cacheMaxAge.forEach(function (item) {\n                _this.addCacheMaxAgeRule(item.regex, item.maxAge);\n            });\n            config.cache.cacheRules.cacheAlways.forEach(function (item) {\n                _this.addCacheAlwaysRule(item.regex);\n            });\n            config.cache.cacheRules.cacheNever.forEach(function (item) {\n                _this.addCacheNeverRule(item.regex);\n            });\n            _this.setRestCacheStorageConfig(config.restCache.storageConfig);\n            _this.setRestCacheDefault(config.restCache.cacheRules.default);\n            config.restCache.cacheRules.cacheMaxAge.forEach(function (item) {\n                _this.addRestCacheMaxAgeRule(item.regex, item.maxAge);\n            });\n            config.restCache.cacheRules.cacheAlways.forEach(function (item) {\n                _this.addRestCacheAlwaysRule(item.regex);\n            });\n            config.restCache.cacheRules.cacheNever.forEach(function (item) {\n                _this.addRestCacheNeverRule(item.regex);\n            });\n            _this.setLogBasePath(config.log.dir);\n            ['log', 'warn', 'error', 'info', 'debug'].forEach(function (log) {\n                _this.setLogDefinition(log, config.log[log].enabled, config.log[log].stacktrace);\n            });\n        };\n        this.regexSame = function (r1, r2) {\n            if (r1 instanceof RegExp && r2 instanceof RegExp) {\n                var props = [\"global\", \"multiline\", \"ignoreCase\", \"source\"];\n                for (var i = 0; i < props.length; i++) {\n                    var prop = props[i];\n                    if (r1[prop] !== r2[prop]) {\n                        return (false);\n                    }\n                }\n                return (true);\n            }\n            return (false);\n        };\n        if (config) {\n            this.importConfig(config);\n        }\n        else {\n            this.setDomain('http://localhost');\n            this.setPort(80);\n            this.setTimeout(10000);\n            this.setDebug(true);\n            this.setRenderStrategy('never');\n            this.addRenderRule(/.*/);\n            this.setCacheDefault('never');\n            this.setRestCacheDefault('never');\n            this.setLogBasePath('/var/log/angular.js-server');\n            ['log', 'warn', 'error', 'info', 'debug'].forEach(function (log) {\n                _this.setLogDefinition(log, true);\n            });\n            this.setLogFileServerName('angular-server');\n        }\n        this.configInstanciated = true;\n        this.initializeLogFileStructure();\n        this.initializeCache();\n        this.initializeRestCache();\n    }\n    EngineConfig.prototype.shouldRender = function (url) {\n        var i, regex;\n        switch (this.renderConfig.strategy) {\n            case 'none':\n                return false;\n            case 'all':\n                return true;\n            case 'include':\n                for (i in this.renderConfig.rules) {\n                    regex = this.renderConfig.rules[i];\n                    if (regex.test(url)) {\n                        return true;\n                    }\n                }\n                return false;\n            case 'exclude':\n                for (i in this.renderConfig.rules) {\n                    regex = this.renderConfig.rules[i];\n                    if (regex.test(url)) {\n                        return false;\n                    }\n                }\n                return true;\n        }\n    };\n    ;\n    EngineConfig.prototype.initializeLogFileStructure = function () {\n        var _this = this;\n        if (!this.configInstanciated) {\n            return;\n        }\n        this.logConfig.dir = path.resolve(this.logConfig.dir);\n        shell.mkdir('-p', this.logConfig.dir);\n        var paths = [];\n        ['warn', 'log', 'debug', 'error', 'info'].forEach(function (item) {\n            if (_this.logConfig[item].enabled) {\n                paths.push(path.resolve(path.join(_this.logConfig.dir, item + '.log')));\n            }\n        });\n        paths.push(path.resolve(path.join(this.logConfig.dir, 'dev.log')));\n        paths.push(path.resolve(path.join(this.logConfig.dir, this.logConfig.serverLogFile + '.log')));\n        paths.forEach(function (path) {\n            try {\n                fs.closeSync(fs.openSync(path, 'a'));\n            }\n            catch (e) {\n                this.log('Error launching the server', e);\n                console.error('Error launching the server', e);\n                throw e;\n            }\n        });\n    };\n    ;\n    return EngineConfig;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EngineConfig;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/EngineConfig.ts\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"simple-url-cache\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"simple-url-cache\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"shelljs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"shelljs\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"debug\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"debug\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"es6-promise\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"es6-promise\"\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nexports.ResponseStatus = {\n    RENDERED: 'RENDERED',\n    RENDER_EXCLUDED: 'RENDER_EXCLUDED',\n    ALREADY_CACHED: 'ALREADY_CACHED',\n    SERVER_TIMEOUT: 'SERVER_TIMEOUT',\n    ERROR_HANDLER: 'ERROR_HANDLER',\n    SERVER_ERROR: 'SERVER_ERROR'\n};\nvar ResponseCodes = {\n    RENDERED: 0,\n    RENDER_EXCLUDED: 1,\n    ALREADY_CACHED: 2,\n    SERVER_TIMEOUT: 3,\n    ERROR_HANDLER: 4,\n    SERVER_ERROR: 5\n};\nvar Response = (function () {\n    function Response() {\n    }\n    Response.send = function (html, status, Exception) {\n        if (typeof ResponseCodes[status] === 'undefined') {\n            throw new Error('This status doesn\\'t exist ' + status);\n        }\n        var trace = null;\n        if (ResponseCodes[status].stacktrace) {\n            if (typeof Exception === 'Error') {\n                trace = Error['stack'];\n            }\n            else {\n                trace = new Error().stack;\n            }\n        }\n        return {\n            html: html,\n            code: ResponseCodes[status],\n            status: status,\n            trace: trace\n        };\n    };\n    return Response;\n}());\nexports.Response = Response;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ResponseFormater.ts\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}